#!/bin/bash

## Publish Script
## Cleans up the node_modules, re-installs everything, runs test before publishing
## It will generate the docs and pushes the changes up to main branch
##    ./bin/publish patch/minor/major public      publishes as a bump
##    ./bin/publish patch/minor/major             publishes as beta

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
CURRENT_BRANCH=$(git branch --show-current)

# Release tag
tag="alpha"
if [ "$1" == "public" ] ; then
  tag="public"
fi
if [ "$1" == "beta" ] ; then
  tag="beta"
fi
# Version bump
bump="patch"
if [ "$2" == "minor" ] ; then
  bump="minor"
fi
if [ "$2" == "major" ] ; then
  bump="major"
fi
if [ "$1" != "public" ] ; then
  bump="pre${bump}"
fi

# Verify tag and branch
if [ "$CURRENT_BRANCH" == "main" ] && [ "$tag" != "public" ] ; then
  echo "main branch can only have public release"
  exit 1
fi
if [ "$tag" == "public" ] && [ "$CURRENT_BRANCH" != "main" ] ; then
  echo "Public release must be done on the main branch"
  exit 1
fi
if [ "$tag" == "alpha" ] && [[ "$CURRENT_BRANCH" =~ ^v.-beta$ ]] ; then
  echo "Alpha release cannot be on a v*-beta branch"
  exit 1
fi

# Version
if [ "$tag" == "public" ] ; then
  version=$(npm version "${bump}")
else
  version=$(npm version "${bump}" --preid="${tag}")
fi

# Show notification and a countdown before publishing
secs=5
while [ $secs -gt 0 ]; do
  echo -ne "Publishing \033[1m${version}\033[0m as a \033[1m${tag}\033[0m release in ${secs}sec\033[0K\r"
  sleep 1
  : $((secs--))
done
echo -ne "Publishing \033[1m${version}\033[0m as a \033[1m${tag}\033[0m release\033[0K\r"
echo -ne "\r\n"

# Cleanup
echo "=== Cleaning ==="
npm run clean
npm install

# Test
echo "=== Linting ==="
npm run lint
echo "=== Testing ==="
npm run test
echo "=== Building ==="
npm run build

# Publish
echo "=== Publishing ${version} ==="
if [ "$tag" == "public" ] ; then
  npm publish
else
  npm publish --tag "${tag}"
fi

# Push readme
git add README.md
git commit -m "Published ${version}" --no-verify
git push --no-verify
git push --tags --no-verify
